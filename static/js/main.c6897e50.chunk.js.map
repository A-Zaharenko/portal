{"version":3,"sources":["assets/images/home/imgEnjoy.svg","assets/images/home/puzzle.svg","assets/images/home/phoneBackground.svg","assets/images/home/phone.svg","assets/images/home/slider/slide1.gif","assets/images/home/slider/slide2.png","assets/images/home/slider/3.png","assets/images/home/slider/4.png","assets/images/home/slider/3ru.svg","assets/images/home/slider/4ru.svg","assets/images/home/slider/3cn.svg","assets/images/home/slider/4cn.svg","assets/images/home/extensionImg.png","articles sync nonrecursive /.html$","articles/1.html","components/App/index.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","hostname","window","match","location","publicUrl","process"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,2qTCA3C,IAAIC,EAAM,CACT,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,KAIb,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,gBC3BpBL,EAAOC,QAAU,0FAA6F,EAAQ,KAAsB,yUAA6U,EAAQ,KAAsB,24B,2jaC4Dvc,SAAS,GAA4E,SAAS,EAAI,GAAO,IAAI,EAAiW,OAA3V,OAAO,EAAgC,EAAvC,CAA0C,KAAK,IAAK,EAAM,OAAO,EAA2C,EAAlD,CAAqD,KAAK,OAAO,EAAgC,EAAvC,CAA0C,GAAK,KAAK,KAAK,KAAc,eAAe,SAAS,GAAM,EAAM,SAAS,CAAC,SAAS,KAAS,EAAM,UAAU,CAAC,GAAG,EAAG,GAAG,EAAG,GAAG,GAAI,EAAM,MAAM,CAAC,SAAS,EAAM,gCAAuC,E,OAA1b,OAAO,EAA0B,EAAjC,CAAoC,EAAI,GAAyZ,OAAO,EAA6B,EAApC,CAAuC,EAAI,CAAC,CAAC,IAAI,+BAA+B,MAAM,WAAwC,IAAI,EAAS,KAAK,gBAAoB,EAAS,KAAK,cAAc,KAAI,SAAS,GAAG,OAAO,EAAE,SAAS,OAAG,EAAS,OAAM,SAAS,GAAG,OAAO,EAAE,QAAQ,KAAoB,EAAS,GAAW,IAAY,CAAC,IAAI,kBAAkB,MAAM,WAA2B,OAAO,UAAU,UAAU,UAAU,WAAW,UAAU,UAAU,IAAI,UAAU,cAAc,OAAQ,CAAC,IAAI,cAAc,MAAM,WAAuB,IAAI,EAAO,KAAK,OAAO,OAAO,KAAK,KAAK,WAAW,KAAI,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,EAAO,UAAU,GAAG,WAAY,CAAC,IAAI,SAAS,MAAM,WAAkB,OAAO,EAAc,EAAE,cAAc,MAAM,CAAC,UAAU,QAAQ,a,EAA5sC,C,gBC7C5Bc,QACD,cADfC,OAAiC,SAC7B,UACuBC,UAA3BD,OAAOE,SAASH,UAQhB,OAAMI,SAAc,SAAMC,MAAR,2DChBtB,EAAkB,EAAE,OAAO,EAAc,EAAE,cAAc,EAAe,MAAM,SAAS,eAAe,S","file":"static/js/main.c6897e50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imgEnjoy.aa715923.svg\";","module.exports = __webpack_public_path__ + \"static/media/puzzle.672ba59c.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoneBackground.3a91df8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.b08dcaea.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide1.ae904556.gif\";","module.exports = __webpack_public_path__ + \"static/media/slide2.3bded6d7.png\";","module.exports = __webpack_public_path__ + \"static/media/3.a81caf4c.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e85f167d.png\";","module.exports = __webpack_public_path__ + \"static/media/3ru.55c55d1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/4ru.f8c90306.svg\";","module.exports = __webpack_public_path__ + \"static/media/3cn.888f5ab6.svg\";","module.exports = __webpack_public_path__ + \"static/media/4cn.b4c0d9f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/extensionImg.802630d1.png\";","var map = {\n\t\"./1.html\": 114,\n\t\"./2.html\": 119,\n\t\"./3.html\": 121,\n\t\"./4.html\": 123,\n\t\"./5.html\": 125,\n\t\"./6.html\": 127\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 113;","module.exports = \"<h1>WHAT IS NEEDED FOR LEARNING ENGLISH? (OR THE SECOND LANGUAGE)</h1>\\n<img\\n    src=\\\"\" + require(\"./images/1-1.jpg\") + \"\\\"\\n    alt=\\\"WHAT IS NEEDED FOR LEARNING ENGLISH? (OR THE SECOND LANGUAGE)\\\"\\n/>\\n<p>\\n    The skills framework helps us to do everything, like read aloud, swim or\\n    drive. <b>For mastering a second language must have that 3 skills:</b>\\n</p>\\n<div class=\\\"flex-parent\\\">\\n    <div class=\\\"flex-child\\\">\\n        <img src=\\\"\" + require(\"./images/1-2.jpg\") + \"\\\" alt=\\\"Listening\\\" />\\n    </div>\\n    <div class=\\\"flex-child\\\">\\n        <h2>Listening</h2>\\n        <p>\\n            It needs not only to identify a word but also quickly understand the\\n            phrase. Besides, need to understand the speech from different\\n            people.  With the understanding of spelling word by word we hardly\\n            understand it in the whole sentence.\\n        </p>\\n    </div>\\n</div>\\n<div class=\\\"flex-parent\\\">\\n    <div class=\\\"flex-child\\\">\\n        <h2>Speaking</h2>\\n        <p>\\n            Require to voice your thoughts on the fly. (i.e. never at a loss for\\n            words). Due to the fact of memorizing words translation, the\\n            situation when you can’t recall words can be generally, only you\\n            need is understanding the context of the word.\\n        </p>\\n    </div>\\n    <div class=\\\"flex-child\\\">\\n        <img src=\\\"\" + require(\"./images/1-3.jpg\") + \"\\\" alt=\\\"Listening\\\" />\\n    </div>\\n</div>\\n<div class=\\\"flex-parent\\\">\\n    <div class=\\\"flex-child\\\">\\n        <img src=\\\"\" + require(\"./images/1-4.jpg\") + \"\\\" alt=\\\"Listening\\\" />\\n    </div>\\n    <div class=\\\"flex-child\\\">\\n        <h2>Writing</h2>\\n        <p>\\n            Visual memory effect on our writing ability. The more we read, the\\n            more graphic images of words will be remembered, the easier it is to\\n            write. Visual memory helps us to improve our spelling!\\n        </p>\\n    </div>\\n</div>\\n<time datetime=\\\"June 19, 2019\\\">June 19, 2019</time>\\n\";","import React from \"react\";\nimport { Router, createHistory, LocationProvider } from \"@reach/router\";\nimport \"./App.scss\";\nimport Blog from \"../Blog\";\nimport Navbar from \"../Navbar\";\nimport Home from \"../Home\";\nimport BtnTop from \"../BtnTop\";\nimport languageEn from \"../../assets/languages/en.json\";\nimport languageRu from \"../../assets/languages/ru.json\";\nimport languageCn from \"../../assets/languages/cn.json\";\nimport NotFound from \"../NotFound\";\nimport createHashSource from \"hash-source\";\n\n// let source = createHashSource();\n// let history = createHistory(source);\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.langStore = {\n            en: languageEn,\n            ru: languageRu,\n            cn: languageCn\n        };\n        this.state = {\n            language: this.getUserLanguageFromInputList()\n        };\n    }\n    getUserLanguageFromInputList() {\n        const userLang = this.getUserLanguage;\n        const langList = this.getLangList().map(l => l.value);\n        if (langList.every(l => l.value !== userLang)) {\n            return langList[0];\n        }\n        return userLang;\n    }\n    getUserLanguage() {\n        return (\n            navigator.language ||\n            (navigator.languages && navigator.languages[0]) ||\n            navigator.userLanguage ||\n            \"en\"\n        );\n    }\n    handleLanguage = lang => {\n        this.setState({\n            language: lang\n        });\n    };\n    getLangList() {\n        return Object.keys(this.langStore).map(k => {\n            return { value: k, name: this.langStore[k].name };\n        });\n    }\n    render() {\n        return (\n            <div className=\"test\">\n                hello\n            </div>\n            // <LocationProvider history={history}>\n            //     <div className=\"App\">\n            //         <Navbar\n            //             curLang={this.state.language}\n            //             langList={this.getLangList()}\n            //             handleLanguage={this.handleLanguage}\n            //             text={this.langStore[this.state.language]}\n            //         ></Navbar>\n            //         <Router>\n            //             <Home\n            //                 path=\"/\"\n            //                 text={this.langStore[this.state.language]}\n            //             ></Home>\n            //             <Blog path=\"/blog\"></Blog>\n            //             <NotFound default></NotFound>\n            //         </Router>\n            //         <BtnTop></BtnTop>\n            //     </div>\n            // </LocationProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}